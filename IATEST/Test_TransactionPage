import random
import psycopg2
from psycopg2 import *
def get_random_integer(min_value, max_value):
    return random.randint(min_value, max_value)


keyCreatedChecker = False
        
conn=psycopg2.connect(host="localhost", dbname="postgres", user="postgres", password="12345", port=5432)
cur = conn.cursor()
def transactionIDcreator():
    global keyCreatedChecker
    ID = [] #trans id
    ITID=[] #inv typ id
    RID = [] #inventory generator

    idCharLimit = 5 #Transaction ID generator
    while idCharLimit >=0: 
        I= get_random_integer(0, 9)
        RandInt = str(I)
        idCharLimit =idCharLimit-1
        ID.append(RandInt)
    TransIDHolder = ''.join(ID)
    print(int(TransIDHolder))

    idCharLimit3 = 5
    while idCharLimit3 >=0: #transtype ID generator
        I= get_random_integer(0, 9)
        RandInt = str(I)
        idCharLimit3 =idCharLimit3-1
        ITID.append(RandInt)
    TransTypeIDHolder = ''.join(ITID)
    print(int(TransTypeIDHolder))


    idCharLimit2=5
    while idCharLimit2 >=0: #Goods ID generator
        N= get_random_integer(0, 9)
        idCharLimit2 =idCharLimit2-1
        RandInt = str(N)
        RID.append(RandInt)
    GoodsIDHolder = ''.join(RID)
    print(int(GoodsIDHolder))

    print("This worked")
    cur.execute("""SELECT * FROM ALREADYCREATEDKEYS""")
    results = cur.fetchall()
    
    print (results)
    print("This too")
    keyCreatedChecker = True
    
    for row in results:
        if row[0] == TransIDHolder or row[1] == TransTypeIDHolder or row[2] == GoodsIDHolder:
            print("Duplicate ID found")
            keyCreatedChecker = False
            break
    
    if keyCreatedChecker:
        print("This ran!")
        cur.execute("""INSERT INTO ALREADYCREATED 
        VALUES (%s, %s, %s)""", (TransIDHolder, TransTypeIDHolder, GoodsIDHolder))
        conn.commit()
        return TransIDHolder, TransTypeIDHolder, GoodsIDHolder
    else:
        return transactionIDcreator()  # Try again with new IDs

transactionIDcreator()